202.46.129.90
user:root
passroot:husni007#
passmysql:samadgnroot
namadb:kependudukan_lebih_baru

Sudah Fix:
1: Jenis Kelamin
2: Hubungan Keluarga
3: Status Perkawinan
4: Agama
5: Golongan Darah
6: Pendidikan
7: Pekerjaan
8: Cacat yang dimiliki
9: Status KTP
10: Alasan Pemohon KK
11: Ada/Tidak ada
12: Alasan Perpindahan Tempat/Alasan Numpang KK
13: Flag untuk biodata_wni
14: Status untuk BFLAG (Status baca oleh petugas pada setiap transaksi)
15: Indeks tipe data untuk data_gambar
16: Flag untuk data_kelahiran
17: Untuk jenis anggota pemerintahan (Rumah sakit, Puskesmas, petugas pemerintahan, dll.)
Blm Fix:
18: Kelengkapan Identitas untuk Akta Kelahiran
19: Keputusan ya atau tidak

BK = Berkebutuhan Khusus
HBK = Hubungan Keluarga

Interesting Things:
mysql> SELECT CURDATE();
        -> '2008-06-13'
mysql> SELECT CURDATE() + 0;
        -> 20080613

LIST QUERY:

*Bakal berguna nanti lol
SELECT CONCAT(b.NO_KEC,b.NO_KEL,01,CURDATE()+0,"0001")
FROM biodata_wni b, data_kelahiran_rs d
WHERE b.NIK=d.NIK_IBU_LHR	

*Untuk migrasi data
INSERT INTO kependudukan_lebih_baru.biodata_wni(`NIK`, `TGL_CTK_KTP`, `NO_PASPOR`, `TGL_AKH_PASPOR`, `NAMA_LGKP`, `JENIS_KLMN`, `TEMPAT_LHR`, `TGL_LHR`, `NO_AKTA_LHR`, `GOL_DRH`, `AGAMA`, `PDDK_AKH`, `JENIS_PKRJN`, `STAT_KWN`, `NO_AKTA_KWN`, `TGL_KWN`, `NO_AKTA_CRAI`, `TGL_CRAI`, `NO_KK`, `STATUS_HDK`, `NIK_AYAH`, `NAMA_LGKP_AYAH`, `NIK_IBU`, `NAMA_LGKP_IBU`, `STATUS_BK`, `NO_KEL`, `NO_KEC`, `NO_KABKOT`, `NO_PROP`, `TGL_UBAH_TRKHR`, `NIP_PET`, `STATUS_KTP`)
SELECT `NIK`, `TGL_CETAK_KTP`, `NO_PASPOR`, `TGL_AKH_PASPOR`, `NAMA_LGKP`, `JENIS_KLMN`, `TMPT_LHR`, `TGL_LHR`, `NO_AKTA_LHR`, `GOL_DRH`, `AGAMA`, `PDDK_AKH`, `JENIS_PKRJN`, `STAT_KWN`, `NO_AKTA_KWN`, `TGL_KWN`, `NO_AKTA_CRAI`, `TGL_CRAI`, `NO_KK`, `STAT_HBKEL`, `NIK_AYAH`, `NAMA_LGKP_AYAH`, `NIK_IBU`, `NAMA_LGKP_IBU`, `PNYDNG_CCT`, `NO_KEL`, `NO_KEC`, `NO_KAB`, `NO_PROP`, `TGL_ENTRI`, `NIP_PET_ENTRI`, `STAT_KTP` FROM siak_offline.biodata_wni;

*Update tanggal edit setiap ada perubahan
CREATE TRIGGER update_ubah_bwni BEFORE UPDATE ON biodata_wni
FOR EACH ROW SET NEW.tgl_ubah_trkhr = CURDATE();

*Update status ktp 
UPDATE biodata_wni
SET status_ktp=0
WHERE NIK='';

*Trigger sebelum insert data tabel transaksi --GAK JADI, GANTI FORMAT
CREATE TRIGGER insert_data_awal
BEFORE INSERT ON kependudukan_lebih_baru.`data_kelahiran`
FOR EACH ROW
SET NEW.id_tx_lhr = SUBSTR(CONCAT(MD5(RAND()),MD5(RAND())),1,8), NEW.tgl_isi = CURDATE();

*Format insert NIK --(SENGAJA) BELUM JADI
SELECT CONCAT(352010,SUBSTR(CURDATE(),9,2),SUBSTR(CURDATE(),6,2),SUBSTR(CURDATE(),3,2),'0001');

*Hapus data transaksi jika berumur lebih dari atau sama dengan 2 hari --GAK JADI, GANTI FORMAT
SHOW VARIABLES WHERE variable_name='event_scheduler';
SET GLOBAL event_scheduler = ON;
DELIMITER $$
CREATE EVENT `hapusDataKelahiranLama`
  ON SCHEDULE EVERY 1 DAY STARTS '2017-09-01 00:00:00'
  ON COMPLETION PRESERVE
DO BEGIN
   DELETE FROM data_kelahiran 
   WHERE DATEDIFF(CURDATE(),tgl_isi)>1;
END$$
DELIMITER ;

*Update kepemilikan akta setiap diisi --GAK JADI, GANTI FORMAT
DELIMITER $$
CREATE TRIGGER upd_kep_akte BEFORE UPDATE ON cobacoba.t
FOR EACH ROW
BEGIN
UPDATE t
SET NEW.akte_kwn = 1 
WHERE NEW.no_akte_kwn != 0;
END$$
DELIMITER ;

*Function untuk membuat nomor registrasi surat rumah sakit & puskesmas (selain no urut indeks)
DELIMITER $$
USE `kependudukan_paling_baru`$$
DROP FUNCTION IF EXISTS `getRegRSPusNumber`$$
CREATE FUNCTION `getRegRSPusNumber`(sNO_IDNT BIGINT(10) UNSIGNED, sJNS_SURAKTA TINYINT(2), sUSERNAME VARCHAR(20)) RETURNS VARCHAR(30) CHARSET latin1
BEGIN
    DECLARE nRegNum VARCHAR(30); 
    SET nRegNum =  (SELECT CONCAT(NO_IDNT,LPAD(sJNS_SURAKTA,2,"0"),SUBSTR(CURDATE(),9,2),SUBSTR(CURDATE(),6,2),SUBSTR(CURDATE(),3,2))
                          FROM data_pemerintah
                          WHERE NO_IDNT = sNO_IDNT 
				AND USERNAME = sUSERNAME);
    RETURN nRegNum;
END$$
DELIMITER ;

*Function untuk mendapat nilai maksimal no urut indeks dari nomor registrasi rumah sakit dan puskesmas
DELIMITER $$
USE `kependudukan_paling_baru`$$
DROP FUNCTION IF EXISTS `getMaxRSPusNumber`$$
CREATE FUNCTION `getMaxRSPusNumber`(sNO_IDNT BIGINT(10) UNSIGNED, sJNS_SURAKTA TINYINT(2), sUSERNAME VARCHAR(20)) RETURNS VARCHAR(4) CHARSET latin1
BEGIN
    DECLARE nMax SMALLINT(4); 
	IF sJNS_SURAKTA = 1 THEN
		SET nMax =  (SELECT MAX(SUBSTR(NO_KET_RS,16,4))
				FROM data_kelahiran_rs
				WHERE NO_KET_RS LIKE CONCAT(getRegRSPusNumber(sNO_IDNT,sJNS_SURAKTA,sUSERNAME),"%"));
	ELSEIF sJNS_SURAKTA = 2 THEN
		SET nMax =  (SELECT MAX(SUBSTR(NO_KET_PUS,19,4))
				FROM data_kelahiran_pus
				WHERE NO_KET_PUS LIKE CONCAT(getRegRSPusNumber(sNO_IDNT,sJNS_SURAKTA,sUSERNAME),"%"));
	END IF;
    RETURN nMax;
END$$
DELIMITER ;

*Procedure untuk input nomor registrasi rumah sakit dan puskesmas
DELIMITER $$
USE `kependudukan_paling_baru`$$
DROP PROCEDURE IF EXISTS `sp_setRSPusRegNum`$$
CREATE PROCEDURE `sp_setRSPusRegNum`(sNO_IDNT BIGINT(10),  
              sJNS_SURAKTA TINYINT(2), sUSERNAME VARCHAR(20))
BEGIN
    DECLARE maxNum SMALLINT(4);
    SET maxNum =  getMaxRSPusNumber(sNO_IDNT, sJNS_SURAKTA, sUSERNAME);
    IF maxNum IS NULL AND sJNS_SURAKTA = 1 THEN
        INSERT INTO data_kelahiran_rs (NO_KET_RS)
        VALUES (CONCAT(getRegRSPusNumber(sNO_IDNT, sJNS_SURAKTA, sUSERNAME),"0001"));
    ELSEIF maxNum IS NULL AND sJNS_SURAKTA = 2 THEN
	INSERT INTO data_kelahiran_pus (NO_KET_PUS)
        VALUES (CONCAT(getRegRSPusNumber(sNO_IDNT, sJNS_SURAKTA, sUSERNAME),"0001"));
    ELSEIF maxNum IS NOT NULL AND sJNS_SURAKTA = 1 THEN
        INSERT INTO data_kelahiran_rs (NO_KET_RS)
        VALUES (CONCAT(getRegRSPusNumber(sNO_IDNT, sJNS_SURAKTA, sUSERNAME),LPAD(maxNum+1, 4, "0")));
    ELSEIF maxNum IS NOT NULL AND sJNS_SURAKTA = 2 THEN
        INSERT INTO data_kelahiran_pus (NO_KET_PUS)
        VALUES (CONCAT(getRegRSPusNumber(sNO_IDNT, sJNS_SURAKTA, sUSERNAME),LPAD(maxNum+1, 4, "0")));
    END IF;
END$$
DELIMITER ;

*Function untuk membuat nomor transaksi akta (selain no urut indeks)
DELIMITER $$
USE `kependudukan_paling_baru`$$
DROP FUNCTION IF EXISTS `getRegAktaNumber`$$
CREATE FUNCTION `getRegAktaNumber`(sNO_KET_RSPUS VARCHAR(22), sJNS_SURAKTA TINYINT(2)) RETURNS VARCHAR(30) CHARSET latin1
BEGIN
	DECLARE nRegNum VARCHAR(30);
		IF sJNS_SURAKTA = 1 THEN
			SET nRegNum =  (SELECT CONCAT(bw.NO_KEC,bw.NO_KEL,"03",SUBSTR(CURDATE(),9,2),SUBSTR(CURDATE(),6,2),SUBSTR(CURDATE(),3,2))
					FROM biodata_wni bw, data_kelahiran_rs dkr
					WHERE bw.NIK = dkr.NIK_IBU_LHR
						AND dkr.NO_KET_RS = sNO_KET_RSPUS);
		ELSEIF sJNS_SURAKTA = 2 THEN
			SET nRegNum =  (SELECT CONCAT(bw.NO_KEC,bw.NO_KEL,"03",SUBSTR(CURDATE(),9,2),SUBSTR(CURDATE(),6,2),SUBSTR(CURDATE(),3,2))
					FROM biodata_wni bw, data_kelahiran_pus dkp
					WHERE bw.NIK = dkp.NIK_IBU_LHR
						AND dkp.NO_KET_PUS = sNO_KET_RSPUS);
		END IF;
	RETURN nRegNum;
END$$
DELIMITER ;

*Function untuk mendapat nilai maksimal no urut indeks dari nomor transaksi akta
DELIMITER $$
USE `kependudukan_paling_baru`$$
DROP FUNCTION IF EXISTS `getMaxAktaNumber`$$
CREATE FUNCTION `getMaxAktaNumber`(sNO_KET_RSPUS VARCHAR(22), sJNS_SURAKTA TINYINT(2)) RETURNS VARCHAR(4) CHARSET latin1
BEGIN
    DECLARE nMax SMALLINT(4); 
	SET nMax =  (SELECT MAX(SUBSTR(REG_TX_LHR,15,4))
			FROM data_kelahiran
			WHERE REG_TX_LHR LIKE CONCAT(getRegAktaNumber(sNO_KET_RSPUS,sJNS_SURAKTA),"%"));
    RETURN nMax;
END$$
DELIMITER ;

*Procedure untuk input transaksi akta
DELIMITER $$
USE `kependudukan_paling_baru`$$
DROP PROCEDURE IF EXISTS `sp_setAktaNum`$$
CREATE PROCEDURE `sp_setAktaNum`(sNO_KET_RSPUS VARCHAR(22), sJNS_SURAKTA TINYINT(2))
BEGIN
    DECLARE maxNum SMALLINT(4);
    SET maxNum =  getMaxAktaNumber(sNO_KET_RSPUS, sJNS_SURAKTA);
    IF maxNum IS NULL THEN
        INSERT INTO data_kelahiran (REG_TX_LHR)
        VALUES (CONCAT(getRegAktaNumber(sNO_KET_RSPUS, sJNS_SURAKTA),"0001"));
    ELSEIF maxNum IS NOT NULL THEN
        INSERT INTO data_kelahiran (REG_TX_LHR)
        VALUES (CONCAT(getRegAktaNumber(sNO_KET_RSPUS, sJNS_SURAKTA),LPAD(maxNum+1, 4, "0")));
    END IF;
END$$
DELIMITER ;